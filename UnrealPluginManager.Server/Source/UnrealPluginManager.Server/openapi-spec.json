{
  "openapi": "3.0.4",
  "info": {
    "title": "Unreal Plugin Manager API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/plugins": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves a paginated list of plugin overviews based on the specified filter and pagination settings.",
        "operationId": "getPlugins",
        "parameters": [
          {
            "name": "match",
            "in": "query",
            "description": "A wildcard string used to filtered plugins by name. Defaults to \"*\".",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve.",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items to retrieve per page.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginOverviewPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plugins"
        ],
        "summary": "Submits a new plugin version along with optional icon and README information.",
        "operationId": "submitPlugin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "manifest"
                ],
                "type": "object",
                "properties": {
                  "manifest": {
                    "$ref": "#/components/schemas/PluginManifest"
                  },
                  "patches": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "icon": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "readme": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "manifest": {
                  "contentType": "application/json"
                },
                "patches": {
                  "contentType": "application/json"
                },
                "icon": {
                  "contentType": "image/png"
                },
                "readme": {
                  "contentType": "text/markdown"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "CanSubmitPlugin"
            ]
          },
          {
            "apiKey": [
              "CanSubmitPlugin"
            ]
          }
        ]
      }
    },
    "/plugins/latest": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves a paginated list of the latest plugin versions filtered by the specified criteria.",
        "operationId": "getLatestVersions",
        "parameters": [
          {
            "name": "match",
            "in": "query",
            "description": "A wildcard string used to filter plugins by name. Defaults to \"*\".",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "versionRange",
            "in": "query",
            "description": "The semantic version range to filter the plugin versions. Defaults to all release versions.",
            "schema": {
              "type": "string",
              "example": ">=1.0.0"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve.",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items to retrieve per page.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersionInfoPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/plugins/{pluginId}/latest": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves detailed information about the latest version of the specified plugin,\r\noptionally constrained by a version range.",
        "operationId": "getLatestVersion",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier of the plugin to retrieve the latest version for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "An optional version range to filter the plugin's versions. Defaults to all released versions.",
            "schema": {
              "type": "string",
              "example": ">=1.0.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/plugins/{pluginId}/latest/dependencies": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves the dependency tree for a specified plugin.",
        "operationId": "getDependencyTree",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier of the plugin whose dependency tree is to be retrieved.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "An optional version range used to filter dependencies for the plugin.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": ">=1.0.0"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "example": ">=1.0.0"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "example": ">=1.0.0"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PluginSummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/plugins/{pluginId}/{versionId}/readme": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves the readme content for a specific version of a plugin.",
        "operationId": "getPluginReadme",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier of the plugin.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The unique identifier of the plugin version.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plugins"
        ],
        "summary": "Adds or updates the README content for the specified plugin version.",
        "operationId": "addPluginReadme",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier for the plugin.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The unique identifier for the specific version of the plugin.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The README content in markdown format to be added or updated.",
          "content": {
            "text/markdown": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "CanEditPlugin"
            ]
          },
          {
            "apiKey": [
              "CanEditPlugin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Plugins"
        ],
        "summary": "Updates the README content for a specific plugin version.",
        "operationId": "updatePluginReadme",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier of the plugin whose README is being updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The unique identifier for the specific version of the plugin.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new README content to replace the existing one.",
          "content": {
            "text/markdown": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "CanEditPlugin"
            ]
          },
          {
            "apiKey": [
              "CanEditPlugin"
            ]
          }
        ]
      }
    },
    "/plugins/{pluginId}/{versionId}/patches": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves a list of source patch information for the specified plugin version.",
        "operationId": "getPluginPatches",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "description": "The unique identifier of the plugin.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The unique identifier of the plugin version.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourcePatchInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/plugins/dependencies/candidates": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Retrieves a dependency manifest containing potential versions for the given list of plugin dependencies.",
        "operationId": "getCandidateDependencies",
        "requestBody": {
          "description": "A list of plugin dependencies for which potential versions are to be determined.",
          "content": {
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PluginDependency"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyManifest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/users/active": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getActiveUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserOverview"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOverview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOverview"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/users/{userId}/api-keys": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "createApiKey",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyOverview"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyOverview"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyOverview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "CallingUser"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeyOverview": {
        "required": [
          "displayName",
          "expiresAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the API key.",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the API key."
          },
          "expiresAt": {
            "type": "string",
            "description": "Gets or sets the expiration date and time of the API key.",
            "format": "date-time"
          },
          "pluginGlob": {
            "maxLength": 255,
            "type": "string",
            "description": "Gets or sets the plugin glob pattern used for defining\r\nwildcard or specific plugin matching rules.",
            "nullable": true
          },
          "allowedPlugins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginIdentifiers"
            },
            "description": "Gets or sets the list of plugin identifiers explicitly allowed for this API key."
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of an API key, including its details, expiry, and associated permissions."
      },
      "BinariesOverview": {
        "required": [
          "engineVersion",
          "id",
          "platform"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "string",
            "description": "Gets or sets the unique identifier for the binary file.",
            "format": "uuid"
          },
          "platform": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the target platform for which the binary is intended."
          },
          "engineVersion": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the engine version associated with the binary file or plugin."
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of binary files for a specific platform and engine version."
      },
      "DependencyManifest": {
        "type": "object",
        "properties": {
          "foundDependencies": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PluginVersionInfo"
              }
            },
            "description": "A property that stores a collection of dependencies that have been successfully resolved\r\nduring the dependency resolution process."
          },
          "unresolvedDependencies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A property that holds a collection of dependencies that could not be resolved\r\nduring the dependency resolution process."
          }
        },
        "additionalProperties": false,
        "description": "Represents a manifest of plugin dependencies resolved by the dependency resolution process."
      },
      "DependencyOverview": {
        "required": [
          "id",
          "pluginName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "string",
            "description": "Gets or sets the unique identifier associated with a dependency.\r\nThis identifier is automatically generated and used to distinguish\r\ndependencies within the system.",
            "format": "uuid"
          },
          "pluginName": {
            "type": "string",
            "description": "Gets or sets the name of the plugin associated with the dependency.\r\nThe plugin name is a required field and must adhere to the predefined naming rules."
          },
          "pluginVersion": {
            "type": "string",
            "description": "Gets or sets the version range associated with the plugin dependency.\r\nThis version range defines the compatible versions of the plugin required by the dependency.",
            "example": ">=1.0.0"
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of a plugin dependency, including its metadata and type."
      },
      "PluginDependency": {
        "required": [
          "pluginName",
          "pluginVersion"
        ],
        "type": "object",
        "properties": {
          "pluginName": {
            "type": "string",
            "description": "Gets the name of the plugin."
          },
          "pluginVersion": {
            "type": "string",
            "description": "Gets the version range of the dependent plugin.",
            "example": ">=1.0.0"
          }
        },
        "additionalProperties": false,
        "description": "Represents a dependency of a plugin within the Unreal Plugin Manager framework."
      },
      "PluginDependencyManifest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the plugin dependency."
          },
          "version": {
            "type": "string",
            "description": "Gets or sets the version constraint of the plugin dependency.\r\nDefines the acceptable range of versions required for the dependency.",
            "example": ">=1.0.0"
          },
          "repositorySource": {
            "$ref": "#/components/schemas/PluginRepositorySource"
          }
        },
        "additionalProperties": false,
        "description": "Represents the dependency manifest of a plugin, detailing the required plugin dependencies.\r\nIt includes information about the dependency's name, version constraints, and optional repository source."
      },
      "PluginIdentifiers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier (GUID) of the plugin.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the plugin."
          }
        },
        "additionalProperties": false,
        "description": "Represents the identifiers for a plugin, including a globally unique identifier (GUID) and its corresponding name."
      },
      "PluginManifest": {
        "required": [
          "dependencies",
          "name",
          "source",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets the name of the plugin as defined in its manifest. This property is\r\nrequired and serves as a unique identifier for the plugin within the Unreal Plugin Manager."
          },
          "version": {
            "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-(?:(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?:[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Gets the semantic version of the plugin as defined in its manifest.\r\nThis property specifies the version of the plugin for identification, compatibility, and dependency resolution purposes.",
            "example": "1.0.0"
          },
          "author": {
            "type": "string",
            "description": "Gets or sets the author of the plugin. This property is optional and provides\r\ninformation about the individual or organization responsible for creating\r\nor maintaining the plugin.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Provides a detailed description of the plugin. This property is optional and may include\r\nany relevant information about the plugin, such as its purpose, features, or any additional\r\ncontext needed for users or developers.",
            "nullable": true
          },
          "license": {
            "type": "string",
            "description": "Gets or sets the license associated with the plugin. This property provides information\r\nabout the licensing terms under which the plugin is distributed.",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "description": "Gets the homepage URL of the plugin. This property provides a link to the plugin's\r\nmain page or website containing additional information, updates, or documentation.",
            "format": "uri",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/SourceLocation"
          },
          "patches": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets a list of patch file names associated with the plugin.\r\nThese patches represent modifications or updates that can be applied to the plugin files.\r\nEach entry in this list corresponds to a patch expected to be uploaded and managed."
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginDependencyManifest"
            },
            "description": "Gets the list of dependencies required by the plugin. Each dependency is described\r\nby its name, version range, and optional repository source from which it can be retrieved.\r\nThis property ensures that all necessary plugins or components are available and aligned\r\nwith the plugin's requirements, allowing proper functionality within the Unreal Plugin Manager."
          }
        },
        "additionalProperties": false,
        "description": "Represents a manifest for a plugin, containing metadata and configuration needed to identify\r\nand manage the plugin within the Unreal Plugin Manager."
      },
      "PluginOverview": {
        "required": [
          "id",
          "name",
          "versions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plugin.",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the name of the plugin."
          },
          "versions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionOverview"
            },
            "description": "Gets or sets the collection of versions associated with the plugin.\r\nEach version provides a detailed overview including its version number\r\nand unique identifier."
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of a plugin, providing basic information such as its ID, name,\r\noptional friendly name, description, and associated versions."
      },
      "PluginOverviewPage": {
        "required": [
          "pageNumber",
          "totalPages",
          "pageSize",
          "count",
          "items"
        ],
        "type": "object",
        "properties": {
          "pageNumber": {
            "minimum": 1,
            "type": "integer",
            "description": "The current page number of the result set.",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 1,
            "type": "integer",
            "description": "The total number of pages in the result set.",
            "format": "int32"
          },
          "pageSize": {
            "minimum": 1,
            "type": "integer",
            "description": "The number of items on each page.",
            "format": "int32",
            "example": 10
          },
          "count": {
            "minimum": 0,
            "type": "integer",
            "description": "The total number of items available in the result set.",
            "format": "int32",
            "example": 1
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginOverview"
            },
            "description": "An array of items on the current page."
          }
        },
        "description": "Represents the output of a paged query of PluginOverview."
      },
      "PluginRepositorySource": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Gets or sets the URL associated with the plugin repository.",
            "format": "uri"
          },
          "ref": {
            "type": "string",
            "description": "Gets or sets the reference identifier or name associated with the plugin repository source.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the source for a plugin repository."
      },
      "PluginSummary": {
        "required": [
          "name",
          "pluginId",
          "version",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "pluginId": {
            "type": "string",
            "description": "Gets the unique identifier of the plugin.\r\nThis property is required and serves as the primary identifier for the plugin within the system.",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Gets the name of the plugin.\r\nThis property is required and uniquely identifies the plugin within the context of the plugin system."
          },
          "versionId": {
            "minimum": 1,
            "type": "string",
            "description": "Gets the unique identifier of the plugin version.\r\nThis property ensures that each version of a plugin is distinctly identifiable within the system.",
            "format": "uuid"
          },
          "version": {
            "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-(?:(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?:[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Gets the semantic version of the plugin.\r\nThis property adheres to the semantic versioning format and is used to specify the version details of the plugin.",
            "example": "1.0.0"
          }
        },
        "additionalProperties": false,
        "description": "Represents a summary of a plugin, including its name, version, and optional description."
      },
      "PluginVersionDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PluginVersionInfo"
          },
          {
            "type": "object",
            "properties": {
              "binaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinariesOverview"
                },
                "description": "Gets or sets the collection of binaries associated with the plugin version.\r\nThis provides details about the compiled binaries, such as their configurations or associated metadata."
              }
            },
            "additionalProperties": false
          }
        ],
        "description": "Represents detailed information about a specific plugin version,\r\nincluding a description and an overview of its binaries."
      },
      "PluginVersionInfo": {
        "required": [
          "dependencies",
          "name",
          "pluginId",
          "version",
          "versionId"
        ],
        "type": "object",
        "properties": {
          "pluginId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for a plugin.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets the name of the plugin associated with the current version."
          },
          "versionId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the plugin version.",
            "format": "uuid"
          },
          "version": {
            "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-(?:(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?:[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Gets the semantic version of the plugin.",
            "example": "1.0.0"
          },
          "description": {
            "type": "string",
            "description": "Gets or sets a brief explanation or summary of the plugin version.\r\nThis provides additional context or details about the plugin functionality or purpose.",
            "nullable": true
          },
          "author": {
            "type": "string",
            "description": "Gets or sets the name of the author associated with the plugin.",
            "nullable": true
          },
          "license": {
            "type": "string",
            "description": "Gets or sets the license information associated with the plugin.",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "description": "Gets or sets the URL of the homepage associated with the plugin.",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/SourceLocation"
          },
          "patches": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the collection of patch versions associated with the plugin."
          },
          "icon": {
            "$ref": "#/components/schemas/ResourceInfo"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginDependency"
            },
            "description": "Gets or sets the list of dependencies for the current plugin version."
          }
        },
        "additionalProperties": false,
        "description": "Represents detailed information about a specific version of a plugin."
      },
      "PluginVersionInfoPage": {
        "required": [
          "pageNumber",
          "totalPages",
          "pageSize",
          "count",
          "items"
        ],
        "type": "object",
        "properties": {
          "pageNumber": {
            "minimum": 1,
            "type": "integer",
            "description": "The current page number of the result set.",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 1,
            "type": "integer",
            "description": "The total number of pages in the result set.",
            "format": "int32"
          },
          "pageSize": {
            "minimum": 1,
            "type": "integer",
            "description": "The number of items on each page.",
            "format": "int32",
            "example": 10
          },
          "count": {
            "minimum": 0,
            "type": "integer",
            "description": "The total number of items available in the result set.",
            "format": "int32",
            "example": 1
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginVersionInfo"
            },
            "description": "An array of items on the current page."
          }
        },
        "description": "Represents the output of a paged query of PluginVersionInfo."
      },
      "ResourceInfo": {
        "required": [
          "originalFilename"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the resource.",
            "format": "uuid"
          },
          "originalFilename": {
            "type": "string",
            "description": "Gets or sets the original filename of the resource before any processing or storage modifications."
          },
          "storedFilename": {
            "type": "string",
            "description": "Gets the name of the file as stored in the underlying file system."
          }
        },
        "additionalProperties": false,
        "description": "Represents metadata and file-related information for a resource."
      },
      "SourceLocation": {
        "required": [
          "sha",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Gets or sets the URL representing the location of the source.",
            "format": "uri"
          },
          "sha": {
            "type": "string",
            "description": "Gets or sets the SHA hash associated with the source location."
          }
        },
        "additionalProperties": false,
        "description": "Represents the location of a source, containing information about its URL and associated SHA hash."
      },
      "SourcePatchInfo": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Represents information about a source patch file, including its filename\r\nand content."
      },
      "UserOverview": {
        "required": [
          "email",
          "id",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier associated with the user.\r\nThis property is required and serves as the primary key for identifying a user.",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "description": "Gets or sets the username associated with the user.\r\nThis property is required and uniquely identifies the user by their chosen identifier."
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the email address associated with the user.\r\nThis property is required and typically used for communication\r\nand identification purposes."
          },
          "profilePicture": {
            "$ref": "#/components/schemas/ResourceInfo"
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of a User entity with essential details for identification and basic user information."
      },
      "VersionDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VersionOverview"
          },
          {
            "required": [
              "dependencies"
            ],
            "type": "object",
            "properties": {
              "dependencies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DependencyOverview"
                },
                "description": "A collection of dependency overviews associated with a specific version of a plugin.\r\nEach dependency overview provides information about dependent plugins, including their metadata, version requirements, and optionality."
              }
            },
            "additionalProperties": false
          }
        ],
        "description": "Represents detailed information about a specific plugin version,\r\nincluding its version number, unique identifier, and list of associated binaries."
      },
      "VersionOverview": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for this instance.",
            "format": "uuid"
          },
          "version": {
            "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-(?:(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?:[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Gets or sets the semantic version of the plugin, representing its specific version details.",
            "example": "1.0.0"
          },
          "source": {
            "$ref": "#/components/schemas/SourceLocation"
          },
          "icon": {
            "$ref": "#/components/schemas/ResourceInfo"
          }
        },
        "additionalProperties": false,
        "description": "Represents a specific version of a plugin, identified by a unique ID and version number."
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/kc/realms/unreal-plugin-manager/protocol/openid-connect/auth",
            "tokenUrl": "/kc/realms/unreal-plugin-manager/protocol/openid-connect/token",
            "scopes": {
              "CanSubmitPlugin": "User is a contributor on the given plugin and has submit privileges",
              "CanEditPlugin": "User is a contributor on the given plugin and has edit privileges"
            }
          }
        }
      },
      "apiKey": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  }
}