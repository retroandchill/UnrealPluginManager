/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceInfo } from './ResourceInfo';
import {
    ResourceInfoFromJSON,
    ResourceInfoFromJSONTyped,
    ResourceInfoToJSON,
    ResourceInfoToJSONTyped,
} from './ResourceInfo';

/**
 * Represents an overview of a User entity with essential details for identification and basic user information.
 * @export
 * @interface UserOverview
 */
export interface UserOverview {
    /**
     * Gets or sets the unique identifier associated with the user.
     * This property is required and serves as the primary key for identifying a user.
     * @type {string}
     * @memberof UserOverview
     */
    id: string;
    /**
     * Gets or sets the username associated with the user.
     * This property is required and uniquely identifies the user by their chosen identifier.
     * @type {string}
     * @memberof UserOverview
     */
    username: string;
    /**
     * Gets or sets the email address associated with the user.
     * This property is required and typically used for communication
     * and identification purposes.
     * @type {string}
     * @memberof UserOverview
     */
    email: string;
    /**
     * 
     * @type {ResourceInfo}
     * @memberof UserOverview
     */
    profilePicture?: ResourceInfo;
}

/**
 * Check if a given object implements the UserOverview interface.
 */
export function instanceOfUserOverview(value: object): value is UserOverview {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function UserOverviewFromJSON(json: any): UserOverview {
    return UserOverviewFromJSONTyped(json, false);
}

export function UserOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'email': json['email'],
        'profilePicture': json['profilePicture'] == null ? undefined : ResourceInfoFromJSON(json['profilePicture']),
    };
}

export function UserOverviewToJSON(json: any): UserOverview {
    return UserOverviewToJSONTyped(json, false);
}

export function UserOverviewToJSONTyped(value?: UserOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'email': value['email'],
        'profilePicture': ResourceInfoToJSON(value['profilePicture']),
    };
}

