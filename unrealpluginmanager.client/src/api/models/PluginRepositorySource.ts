/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents the source for a plugin repository.
 * @export
 * @interface PluginRepositorySource
 */
export interface PluginRepositorySource {
  /**
   * Gets or sets the URL associated with the plugin repository.
   * @type {string}
   * @memberof PluginRepositorySource
   */
  url: string;
  /**
   * Gets or sets the reference identifier or name associated with the plugin repository source.
   * @type {string}
   * @memberof PluginRepositorySource
   */
  ref?: string | null;
}

/**
 * Check if a given object implements the PluginRepositorySource interface.
 */
export function instanceOfPluginRepositorySource(value: object): value is PluginRepositorySource {
  if (!('url' in value) || value['url'] === undefined) return false;
  return true;
}

export function PluginRepositorySourceFromJSON(json: any): PluginRepositorySource {
  return PluginRepositorySourceFromJSONTyped(json, false);
}

export function PluginRepositorySourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginRepositorySource {
  if (json == null) {
    return json;
  }
  return {

    'url': json['url'],
    'ref': json['ref'] == null ? undefined : json['ref'],
  };
}

export function PluginRepositorySourceToJSON(json: any): PluginRepositorySource {
  return PluginRepositorySourceToJSONTyped(json, false);
}

export function PluginRepositorySourceToJSONTyped(value?: PluginRepositorySource | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {

    'url': value['url'],
    'ref': value['ref'],
  };
}

