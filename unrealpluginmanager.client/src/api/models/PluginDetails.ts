/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VersionDetails } from './VersionDetails';
import {
    VersionDetailsFromJSON,
    VersionDetailsFromJSONTyped,
    VersionDetailsToJSON,
    VersionDetailsToJSONTyped,
} from './VersionDetails';

/**
 * Represents detailed information about a plugin, including its associated versions.
 * Inherits from UnrealPluginManager.Core.Model.Plugins.PluginOverviewBase to provide core metadata.
 * @export
 * @interface PluginDetails
 */
export interface PluginDetails {
    /**
     * Gets or sets the unique identifier for the plugin.
     * @type {string}
     * @memberof PluginDetails
     */
    id: string;
    /**
     * Gets or sets the name of the plugin.
     * @type {string}
     * @memberof PluginDetails
     */
    name: string;
    /**
     * Gets or sets the user-friendly name of the plugin, which may be used for display purposes.
     * @type {string}
     * @memberof PluginDetails
     */
    friendlyName?: string | null;
    /**
     * Gets or sets the description of the plugin, providing detailed information about its purpose or functionality.
     * @type {string}
     * @memberof PluginDetails
     */
    description?: string | null;
    /**
     * Gets or sets the name of the author associated with the plugin.
     * @type {string}
     * @memberof PluginDetails
     */
    authorName?: string | null;
    /**
     * Gets or sets the URL associated with the author of the plugin.
     * @type {string}
     * @memberof PluginDetails
     */
    authorWebsite?: string | null;
    /**
     * Gets or sets the collection of versions associated with the plugin.
     * Each version provides a detailed overview including its version number
     * and unique identifier.
     * @type {Array<VersionDetails>}
     * @memberof PluginDetails
     */
    versions: Array<VersionDetails>;
}

/**
 * Check if a given object implements the PluginDetails interface.
 */
export function instanceOfPluginDetails(value: object): value is PluginDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('versions' in value) || value['versions'] === undefined) return false;
    return true;
}

export function PluginDetailsFromJSON(json: any): PluginDetails {
    return PluginDetailsFromJSONTyped(json, false);
}

export function PluginDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'friendlyName': json['friendlyName'] == null ? undefined : json['friendlyName'],
        'description': json['description'] == null ? undefined : json['description'],
        'authorName': json['authorName'] == null ? undefined : json['authorName'],
        'authorWebsite': json['authorWebsite'] == null ? undefined : json['authorWebsite'],
        'versions': ((json['versions'] as Array<any>).map(VersionDetailsFromJSON)),
    };
}

export function PluginDetailsToJSON(json: any): PluginDetails {
    return PluginDetailsToJSONTyped(json, false);
}

export function PluginDetailsToJSONTyped(value?: PluginDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'friendlyName': value['friendlyName'],
        'description': value['description'],
        'authorName': value['authorName'],
        'authorWebsite': value['authorWebsite'],
        'versions': ((value['versions'] as Array<any>).map(VersionDetailsToJSON)),
    };
}

