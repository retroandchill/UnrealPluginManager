/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * UnrealPluginManager.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PluginVersionInfo } from './PluginVersionInfo';
import {
    PluginVersionInfoFromJSON,
    PluginVersionInfoFromJSONTyped,
    PluginVersionInfoToJSON,
    PluginVersionInfoToJSONTyped,
} from './PluginVersionInfo';

/**
 * Represents the output of a paged query of PluginVersionInfo.
 * @export
 * @interface PluginVersionInfoPage
 */
export interface PluginVersionInfoPage {
    /**
     * The current page number of the result set.
     * @type {number}
     * @memberof PluginVersionInfoPage
     */
    pageNumber: number;
    /**
     * The total number of pages in the result set.
     * @type {number}
     * @memberof PluginVersionInfoPage
     */
    totalPages: number;
    /**
     * The number of items on each page.
     * @type {number}
     * @memberof PluginVersionInfoPage
     */
    pageSize: number;
    /**
     * The total number of items available in the result set.
     * @type {number}
     * @memberof PluginVersionInfoPage
     */
    count: number;
    /**
     * An array of items on the current page.
     * @type {Array<PluginVersionInfo>}
     * @memberof PluginVersionInfoPage
     */
    items: Array<PluginVersionInfo>;
}

/**
 * Check if a given object implements the PluginVersionInfoPage interface.
 */
export function instanceOfPluginVersionInfoPage(value: object): value is PluginVersionInfoPage {
    if (!('pageNumber' in value) || value['pageNumber'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function PluginVersionInfoPageFromJSON(json: any): PluginVersionInfoPage {
    return PluginVersionInfoPageFromJSONTyped(json, false);
}

export function PluginVersionInfoPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginVersionInfoPage {
    if (json == null) {
        return json;
    }
    return {
        
        'pageNumber': json['pageNumber'],
        'totalPages': json['totalPages'],
        'pageSize': json['pageSize'],
        'count': json['count'],
        'items': ((json['items'] as Array<any>).map(PluginVersionInfoFromJSON)),
    };
}

export function PluginVersionInfoPageToJSON(json: any): PluginVersionInfoPage {
    return PluginVersionInfoPageToJSONTyped(json, false);
}

export function PluginVersionInfoPageToJSONTyped(value?: PluginVersionInfoPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pageNumber': value['pageNumber'],
        'totalPages': value['totalPages'],
        'pageSize': value['pageSize'],
        'count': value['count'],
        'items': ((value['items'] as Array<any>).map(PluginVersionInfoToJSON)),
    };
}

