/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PluginIdentifiers } from './PluginIdentifiers';
import {
    PluginIdentifiersFromJSON,
    PluginIdentifiersFromJSONTyped,
    PluginIdentifiersToJSON,
    PluginIdentifiersToJSONTyped,
} from './PluginIdentifiers';

/**
 * Represents an overview of an API key, including its details, expiry, and associated permissions.
 * @export
 * @interface ApiKeyOverview
 */
export interface ApiKeyOverview {
    /**
     * Gets or sets the unique identifier for the API key.
     * @type {string}
     * @memberof ApiKeyOverview
     */
    id?: string;
    /**
     * Gets or sets the display name associated with the API key.
     * @type {string}
     * @memberof ApiKeyOverview
     */
    displayName: string;
    /**
     * Gets or sets the expiration date and time of the API key.
     * @type {Date}
     * @memberof ApiKeyOverview
     */
    expiresAt: Date;
    /**
     * Gets or sets the plugin glob pattern used for defining
     * wildcard or specific plugin matching rules.
     * @type {string}
     * @memberof ApiKeyOverview
     */
    pluginGlob?: string | null;
    /**
     * Gets or sets the list of plugin identifiers explicitly allowed for this API key.
     * @type {Array<PluginIdentifiers>}
     * @memberof ApiKeyOverview
     */
    allowedPlugins?: Array<PluginIdentifiers>;
}

/**
 * Check if a given object implements the ApiKeyOverview interface.
 */
export function instanceOfApiKeyOverview(value: object): value is ApiKeyOverview {
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    return true;
}

export function ApiKeyOverviewFromJSON(json: any): ApiKeyOverview {
    return ApiKeyOverviewFromJSONTyped(json, false);
}

export function ApiKeyOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'displayName': json['displayName'],
        'expiresAt': (new Date(json['expiresAt'])),
        'pluginGlob': json['pluginGlob'] == null ? undefined : json['pluginGlob'],
        'allowedPlugins': json['allowedPlugins'] == null ? undefined : ((json['allowedPlugins'] as Array<any>).map(PluginIdentifiersFromJSON)),
    };
}

export function ApiKeyOverviewToJSON(json: any): ApiKeyOverview {
    return ApiKeyOverviewToJSONTyped(json, false);
}

export function ApiKeyOverviewToJSONTyped(value?: ApiKeyOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'displayName': value['displayName'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'pluginGlob': value['pluginGlob'],
        'allowedPlugins': value['allowedPlugins'] == null ? undefined : ((value['allowedPlugins'] as Array<any>).map(PluginIdentifiersToJSON)),
    };
}

