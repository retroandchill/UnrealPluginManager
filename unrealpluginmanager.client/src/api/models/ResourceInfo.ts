/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents metadata and file-related information for a resource.
 * @export
 * @interface ResourceInfo
 */
export interface ResourceInfo {
    /**
     * Gets or sets the unique identifier for the resource.
     * @type {string}
     * @memberof ResourceInfo
     */
    id?: string;
    /**
     * Gets or sets the original filename of the resource before any processing or storage modifications.
     * @type {string}
     * @memberof ResourceInfo
     */
    originalFilename: string;
    /**
     * Gets the name of the file as stored in the underlying file system.
     * @type {string}
     * @memberof ResourceInfo
     */
    storedFilename?: string;
}

/**
 * Check if a given object implements the ResourceInfo interface.
 */
export function instanceOfResourceInfo(value: object): value is ResourceInfo {
    if (!('originalFilename' in value) || value['originalFilename'] === undefined) return false;
    return true;
}

export function ResourceInfoFromJSON(json: any): ResourceInfo {
    return ResourceInfoFromJSONTyped(json, false);
}

export function ResourceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'originalFilename': json['originalFilename'],
        'storedFilename': json['storedFilename'] == null ? undefined : json['storedFilename'],
    };
}

export function ResourceInfoToJSON(json: any): ResourceInfo {
    return ResourceInfoToJSONTyped(json, false);
}

export function ResourceInfoToJSONTyped(value?: ResourceInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'originalFilename': value['originalFilename'],
        'storedFilename': value['storedFilename'],
    };
}

