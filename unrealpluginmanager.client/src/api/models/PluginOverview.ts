/* tslint:disable */
/* eslint-disable */
//@ts-nocheck
/**
 * Unreal Plugin Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {VersionOverview} from './VersionOverview';
import {VersionOverviewFromJSON, VersionOverviewToJSON,} from './VersionOverview';

/**
 * Represents an overview of a plugin, providing basic information such as its ID, name,
 * optional friendly name, description, and associated versions.
 * @export
 * @interface PluginOverview
 */
export interface PluginOverview {
    /**
     * Gets or sets the unique identifier for the plugin.
     * @type {string}
     * @memberof PluginOverview
     */
    id: string;
    /**
     * Gets or sets the name of the plugin.
     * @type {string}
     * @memberof PluginOverview
     */
    name: string;
    /**
     * Gets or sets the collection of versions associated with the plugin.
     * Each version provides a detailed overview including its version number
     * and unique identifier.
     * @type {Array<VersionOverview>}
     * @memberof PluginOverview
     */
    versions: Array<VersionOverview>;
}

/**
 * Check if a given object implements the PluginOverview interface.
 */
export function instanceOfPluginOverview(value: object): value is PluginOverview {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('versions' in value) || value['versions'] === undefined) return false;
    return true;
}

export function PluginOverviewFromJSON(json: any): PluginOverview {
    return PluginOverviewFromJSONTyped(json, false);
}

export function PluginOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'versions': ((json['versions'] as Array<any>).map(VersionOverviewFromJSON)),
    };
}

export function PluginOverviewToJSON(json: any): PluginOverview {
    return PluginOverviewToJSONTyped(json, false);
}

export function PluginOverviewToJSONTyped(value?: PluginOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'versions': ((value['versions'] as Array<any>).map(VersionOverviewToJSON)),
    };
}

