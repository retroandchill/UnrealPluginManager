name: Build & Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
jobs:
  cypress:
    name: Run Component Tests
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Install Node Dependencies
        shell: powershell
        run: |
          cd unrealpluginmanager.client
          npm ci
      - name: Run Cypress
        shell: powershell
        run: |
          cd unrealpluginmanager.client
          npm run cypress:coverage
          if ($LASTEXITCODE -ne 0) {
            exit $LASTEXITCODE
          }
          Rename-Item -Path ./coverage -NewName coverage-cypress
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: cypress-coverage
          path: unrealpluginmanager.client/coverage-cypress/**/*
          
  vitest:
    name: Run TypeScript Tests
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Install Node Dependencies
        shell: powershell
        run: |
          cd unrealpluginmanager.client
          npm ci
      - name: Run Vitest
        shell: powershell
        run: |
          cd unrealpluginmanager.client
          npm run coverage
          if ($LASTEXITCODE -ne 0) {
            exit $LASTEXITCODE
          }
          Rename-Item -Path ./coverage -NewName coverage-vitest
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage
          path: unrealpluginmanager.client/coverage-vitest/**/*
          
  
  build-dotnet:
    name: Build .NET Project
    runs-on: windows-latest
    needs: [vitest, cypress]
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install dotnet-coverage
        shell: powershell
        run: dotnet tool install --global dotnet-coverage
      - name: Download Vitest Coverage
        uses: actions/download-artifact@v4
        with:
          name: vitest-coverage
      - name: Download Cypress Coverage
        uses: actions/download-artifact@v4
        with:
          name: cypress-coverage
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"retroandchill_UnrealPluginManager" /o:"fcorso2016" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.javascript.lcov.reportPaths=**/lcov.info /d:sonar.exclusions="**/Migrations/**,**/UnrealPluginManager.WebClient/**,generate_api.py,unrealpluginmanager.client/src/api/**"
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          if ($LASTEXITCODE -ne 0) {
            exit $LASTEXITCODE
          }
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"  
  
  build-docker:
    name: Build Docker Container
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: retroandchill/unreal-plugin-manager
      
      - name: Build and push docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/retroandchill/unreal-plugin-manager
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true